// <auto-generated />
using System;
using CourseSolution.Ticket.TicketManagment.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseSolution.Ticket.TicketManagment.Persistence.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoursesSolution.Ticket.TicketManagment.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("4468990c-5382-4a04-b2eb-4ab9275e8d04"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Name = "Cyber Security"
                        },
                        new
                        {
                            CategoryId = new Guid("14c1fae5-0639-4dd1-9b72-15d522ab394d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Name = "Artificial Intelligence"
                        },
                        new
                        {
                            CategoryId = new Guid("3c11b904-afc8-4a78-92a9-96eafe236716"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Name = "Mechine Learning"
                        },
                        new
                        {
                            CategoryId = new Guid("d4d0f53a-d69f-4a4c-b9a0-3739aaabce0d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "",
                            Name = "Software Engineering"
                        });
                });

            modelBuilder.Entity("CoursesSolution.Ticket.TicketManagment.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CourseId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = new Guid("47350736-8037-4e28-aa28-bece19b62d58"),
                            Author = "Mohammed alzain",
                            CategoryId = new Guid("4468990c-5382-4a04-b2eb-4ab9275e8d04"),
                            Date = new DateTime(2024, 6, 27, 5, 9, 48, 389, DateTimeKind.Local).AddTicks(7343),
                            Description = "you will know if the cyper security is the right indestury for you or not",
                            Name = "Introduction to Cyber Security",
                            Price = 60.99m
                        },
                        new
                        {
                            CourseId = new Guid("c9424aef-44d4-41a6-bfda-987dbe051d87"),
                            Author = "Abdalazim Attya",
                            CategoryId = new Guid("d4d0f53a-d69f-4a4c-b9a0-3739aaabce0d"),
                            Date = new DateTime(2024, 6, 27, 5, 9, 48, 389, DateTimeKind.Local).AddTicks(7393),
                            Description = "you will know if the web development is the right indestury for you or not",
                            Name = "Introduction to Web Development",
                            Price = 60.99m
                        },
                        new
                        {
                            CourseId = new Guid("040313f6-c01e-4f9a-84b9-beb77673973e"),
                            Author = "Mohanned Rashid",
                            CategoryId = new Guid("3c11b904-afc8-4a78-92a9-96eafe236716"),
                            Date = new DateTime(2024, 5, 27, 5, 9, 48, 389, DateTimeKind.Local).AddTicks(7410),
                            Description = "Take your machine learning skills to the next level with this advanced course.",
                            Name = "Advanced Machine Learning",
                            Price = 89.99m
                        },
                        new
                        {
                            CourseId = new Guid("77995a0c-3fdb-4b96-8e43-337eb638ea23"),
                            Author = "Khalid Mohammed",
                            CategoryId = new Guid("d4d0f53a-d69f-4a4c-b9a0-3739aaabce0d"),
                            Date = new DateTime(2024, 4, 27, 5, 9, 48, 389, DateTimeKind.Local).AddTicks(7429),
                            Description = "Learn to develop mobile applications for both Android and iOS platforms.",
                            Name = "Mobile App Development",
                            Price = 75.50m
                        },
                        new
                        {
                            CourseId = new Guid("583951e8-2221-477e-9e07-258fe5096478"),
                            Author = "Alice Johnson",
                            CategoryId = new Guid("14c1fae5-0639-4dd1-9b72-15d522ab394d"),
                            Date = new DateTime(2024, 7, 27, 5, 9, 48, 389, DateTimeKind.Local).AddTicks(7447),
                            Description = "Discover the basics of artificial intelligence and its applications in various industries.",
                            Name = "Artificial Intelligence Fundamentals",
                            Price = 65.75m
                        });
                });

            modelBuilder.Entity("CoursesSolution.Ticket.TicketManagment.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("bit");

                    b.Property<int>("OrderTotal")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("e30ff405-19d0-4288-9321-a63327197f3f"),
                            OrderDate = new DateTime(2024, 3, 27, 7, 9, 48, 389, DateTimeKind.Local).AddTicks(7482),
                            OrderPaid = false,
                            OrderTotal = 175,
                            UserId = new Guid("13c35229-9be0-407e-8313-cf142d6b34c2")
                        },
                        new
                        {
                            OrderId = new Guid("dfa3a946-bc67-4073-8f34-24a36af67088"),
                            OrderDate = new DateTime(2024, 3, 27, 5, 9, 48, 389, DateTimeKind.Local).AddTicks(7541),
                            OrderPaid = false,
                            OrderTotal = 120,
                            UserId = new Guid("de0bdb7f-6dd2-48a4-8f59-553718064d2c")
                        },
                        new
                        {
                            OrderId = new Guid("7ec834cf-bc6b-453b-835d-520b439afb46"),
                            OrderDate = new DateTime(2024, 3, 27, 5, 9, 48, 389, DateTimeKind.Local).AddTicks(7559),
                            OrderPaid = false,
                            OrderTotal = 175,
                            UserId = new Guid("f6d34e22-f93a-4795-8cb9-76850608e9c4")
                        },
                        new
                        {
                            OrderId = new Guid("cf878c8b-0062-4760-9ff3-1e1b50c5ec00"),
                            OrderDate = new DateTime(2024, 3, 27, 5, 9, 48, 389, DateTimeKind.Local).AddTicks(7656),
                            OrderPaid = false,
                            OrderTotal = 120,
                            UserId = new Guid("1c47de68-219d-4802-9261-46df912438e2")
                        });
                });

            modelBuilder.Entity("CoursesSolution.Ticket.TicketManagment.Domain.Entities.Course", b =>
                {
                    b.HasOne("CoursesSolution.Ticket.TicketManagment.Domain.Entities.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CoursesSolution.Ticket.TicketManagment.Domain.Entities.Category", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
